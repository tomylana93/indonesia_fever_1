local transf = require "transf"
local vec3 = require "vec3"
local modulesutil = require "modulesutil"
local constructionutil = require "constructionutil"

--Begin Generated
local generatedData = {
	["era_c_perron_underpass_assets"] = {
		models = {
			["station/rail/asset/era_c_double_chair.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 3.00000, 0.00000, 0.80000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 33.00000, 0.00000, 0.80000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 7.00000, 0.00000, 0.80000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 37.00000, 0.00000, 0.80000, 1.00000 },
			},
			["station/rail/asset/era_c_perron_holder.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 20.00000, 0.00000, 3.40000, 1.00000 },
			},
			["station/rail/asset/era_c_perron_number.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 3.40000, 1.00000 },
			},
			["station/rail/asset/era_c_perron_pillar.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 10.00000, 0.00000, 0.79000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 30.00000, 0.00000, 0.79000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 20.00000, 0.00000, 0.79000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.79000, 1.00000 },
			},
			["station/rail/asset/era_c_small_clock.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 19.76500, -1.16000, 3.40000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 19.76500, 1.16000, 3.40000, 1.00000 },
			},
			["station/rail/asset/era_c_station_name.mdl"] = {
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 10.00000, 0.00000, 2.20000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.99996, 0.00873, 0.00000, 0.00000, -0.00873, 0.99996, 0.00000, 30.00000, 0.00000, 2.20000, 1.00000 },
			},
			["station/rail/asset/era_c_trashcan.mdl"] = {
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 5.00000, 0.00000, 0.80000, 1.00000 },
				{ 0.00000, 1.00000, 0.00000, 0.00000, -1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 35.00000, 0.00000, 0.80000, 1.00000 },
				{ 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 0.00000, 0.00000, 0.00000, 1.00000, 0.00000, 17.43000, 0.00000, 0.80000, 1.00000 },
			},
		},
	},
}
--End Generated

function data()

local function GetModelsConfig() 
	return {
		perron = "station/rail/era_c/perron_5_underpass.mdl",
		endPerron = "station/rail/era_c/perron_5_end.mdl",
		perronRoof = "station/rail/era_c/perron_5_roof.mdl",
		endPerronRoof = "station/rail/era_c/perron_5_roof_end.mdl",
		era = 2,
	}
end

return { 
	availability = {
		yearFrom = -1,
		yearTo = -1,
	},
	cost = {
		price = 0,
	},
	category = {
		categories = { "platforms", },
	},
	description = {
		name = _("Passenger platform (with underpass)"),
		description = _("A platform with underground connection for passengers."),
		icon = "ui/construction/station/rail/modular_station/platform_passenger_stairs_era_c.tga"
	},
	type = "passenger_platform",
	order = {
		value = 711,
	},
	-- buildMode = "MULTI",
	metadata = {
		platform = true,
		passenger_platform = true,
	},
	
	updateFn = function(result, transform, tag, slotId, addModelFn)
		local faces = {
			{2.5,  -20.0, 0.0, 1.0},
			{2.5,  20.0,  0.0, 1.0},
			{-2.5, 20.0,  0.0, 1.0},
			{-2.5, -20.0, 0.0, 1.0},
		}
		modulesutil.TransformFaces(transform, faces)
		local faces2 = { type = "EQUAL", faces = { faces } }
		table.insert(result.terrainAlignmentLists, faces2)
		
		table.insert(result.colliders, {
			type = "BOX",
			transf = transform,
			params = {
				halfExtents = { 2.5, 20, 2 },
			}
		})
		
		local hole = {
			{1.6,  -10.0, 0.0, 1.0},
			{1.6,  10.0,  0.0, 1.0},
			{-1.6, 10.0,  0.0, 1.0},
			{-1.6, -10.0, 0.0, 1.0},
		}
		modulesutil.TransformFaces(transform, hole)
		table.insert(result.groundFaces, {  
			face = hole,
			modes = {
				{
					type = "FILL",
					key = "hole.lua"
				}
			}
		})
		
		table.insert(result.groundFaces, {  
			face = faces,
			modes = {
				{
					type = "FILL",
					key = "shared/gravel_03.gtex.lua"
				},
				{
					type = "STROKE_OUTER",
					key = "street_border.lua"
				},
			},
		})
		
		result.models[#result.models + 1] = { 
			id = "station/rail/era_a/tn_underground_connection.mdl",
			transf = transf.mul(transform, transf.transl(vec3.new(0, 0, 0))),
			tag = tag
		}
		
		local modelsConfig = GetModelsConfig()
		addModelFn(modelsConfig.perron, transf.rotZTransl(math.rad(90), vec3.new(0, -20, 0)))
		--addModelFn(modelsConfig.perronRoof, transf.rotZTransl(math.rad(90), vec3.new(0, -20, 0)))
		
		local tran = transf.mul(transform, transf.rotZTransl(math.rad(90), vec3.new(0, -20, 0)))
		constructionutil.addModels(generatedData["era_c_perron_underpass_assets"], result.models, tran, tag)
		
		if modelsConfig.era == 2 then
			-- PUR YOUR ERA C code here
		elseif modelsConfig.era == 1 then
			-- PUR YOUR ERA B code here
		else
			constructionutil.addModels(generatedData_era_a["era_a_perron_underpass_assets"], result.models, tran, tag)
		end

		local coords = result.GetCoord(slotId)
		local i = coords[1]
		local j = coords[2]
		
		local nextM = result.GetModuleAt(i,j-1)
		local ca =  (nextM and (nextM.metadata.passenger_platform or nextM.metadata.cargo_platform)) or  result.connector[1000 * i + 100 * (j-1) + 7]
		if not ca then
			addModelFn(modelsConfig.endPerron, transf.rotZTransl(math.rad(-90), vec3.new(0, -20, 0)))
			--addModelFn(modelsConfig.endPerronRoof, transf.rotZTransl(math.rad(-90), vec3.new(0, -20, 0)))
		end
		local prevM = result.GetModuleAt(i,j+1)
		local cb = (prevM and (prevM.metadata.passenger_platform or prevM.metadata.cargo_platform)) or  result.connector[1000 * i + 100 * (j+1) + 0]
		if not cb then
			addModelFn(modelsConfig.endPerron, transf.rotZTransl(math.rad(90), vec3.new(0, 20, 0)))
			--addModelFn(modelsConfig.endPerronRoof, transf.rotZTransl(math.rad(90), vec3.new(0, 20, 0)))
		end
	end,
	
	getModelsFn = function()
		local modelsConfig = GetModelsConfig()
		
		local result = {
			{ 
				id = modelsConfig.perron,
				transf = transf.rotZTransl(math.rad(90), vec3.new(0,-20,0)),
			},
			{ 
				id = modelsConfig.endPerron,
				transf = transf.rotZTransl(math.rad(-90), vec3.new(0,-20,0)),
			},
			{ 
				id = modelsConfig.endPerron,
				transf = transf.rotZTransl(math.rad(90), vec3.new(0,20,0)),
			},
			-- { 
				-- id = modelsConfig.perronRoof,
				-- transf = transf.rotZTransl(math.rad(90), vec3.new(0,-20,0)),
			-- },
			-- { 
				-- id = modelsConfig.endPerronRoof,
				-- transf = transf.rotZTransl(math.rad(-90), vec3.new(0,-20,0)),
			-- },
			-- { 
				-- id = modelsConfig.endPerronRoof,
				-- transf = transf.rotZTransl(math.rad(90), vec3.new(0,20,0)),
			-- },
		}
		
		return result
	end
}

end
